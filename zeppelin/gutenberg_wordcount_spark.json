{"paragraphs":[{"text":"%spark\n\n// Import necessary libraries\nimport org.apache.spark.sql.functions._\nimport scala.io.Source\nimport java.net.URL\n\n// Function to download text from a URL\ndef downloadText(url: String): String = {\n  val source = Source.fromURL(url)\n  val text = source.mkString\n  source.close()\n  text\n}\n\n// Download a book from Project Gutenberg (let's use \"Pride and Prejudice\" by Jane Austen)\nval bookUrl = \"https://www.gutenberg.org/files/1342/1342-0.txt\"\nval bookText = downloadText(bookUrl)\n","user":"anonymous","dateUpdated":"2024-10-15T18:07:44+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\nimport org.apache.spark.sql.functions._\n\nimport scala.io.Source\n\nimport java.net.URL\n\ndownloadText: (url: String)String\n\nbookUrl: String = https://www.gutenberg.org/files/1342/1342-0.txt\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nbookText: String =\n\"*** START OF THE PROJECT GUTENBERG EBOOK 1342 ***\n\n\n\n\n                            [Illustration:\n\n                             GEORGE ALLEN\n                               PUBLISHER\n\n                        156 CHARING CROSS ROAD\n                                LONDON\n\n                             RUSKIN HOUSE\n                                   ]\n\n                            [Illustration:\n\n               _Reading Janeâ€™s Letters._      _Chap 34._\n                                   ]\n\n\n\n\n                                PRIDE.\n                                  and\n                               PREJUDICE\n\n                                  by\n                             Jane Austen,\n\n                           with a Preface by\n                           George Saintsbu...\nbookDF: org.apache.spark.sql.DataFrame = [id: string, text: string]\n\nwordsDF: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [word: string]\n\nwordCountDF: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [word: string, count: bigint]\n+----+-----+\n|word|count|\n+----+-----+\n| the| 4655|\n|  to| 4291|\n|  of| 3836|\n| and| 3713|\n| her| 2276|\n|   i| 2102|\n|   a| 2021|\n|  in| 1977|\n| was| 1874|\n| she| 1744|\n|that| 1623|\n|  it| 1574|\n| not| 1497|\n| you| 1362|\n|  he| 1356|\n| his| 1302|\n|  be| 1260|\n|  as| 1229|\n| had| 1185|\n|with| 1098|\n+----+-----+\nonly showing top 20 rows\n\n"}]},"apps":[],"jobName":"paragraph_1729015367564_-136437874","id":"paragraph_1683720000000_1234567890","dateCreated":"2024-10-15T18:02:47+0000","dateStarted":"2024-10-15T18:05:37+0000","dateFinished":"2024-10-15T18:05:42+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:1459"},{"text":"%spark\n// Create a DataFrame from the book text\nval bookDF = spark.createDataFrame(Seq((\"text\", bookText))).toDF(\"id\", \"text\")\n\n// Split the text into words, convert to lowercase, and remove punctuation\nval wordsDF = bookDF\n  .select(explode(split(lower(col(\"text\")), \"\\\\s+\")).alias(\"word\"))\n  .filter(length(col(\"word\")) > 0)\n  .withColumn(\"word\", regexp_replace(col(\"word\"), \"[^a-z]\", \"\"))\n  .filter(length(col(\"word\")) > 0)\n\n// Perform word count\nval wordCountDF = wordsDF\n  .groupBy(\"word\")\n  .count()\n  .orderBy(desc(\"count\"))\n\n// Show the top 20 most frequent words\nwordCountDF.show(20)\n\n// Create a temporary view for SQL queries\nwordCountDF.createOrReplaceTempView(\"word_counts\")\n","user":"anonymous","dateUpdated":"2024-10-15T18:07:49+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1729015664233_1855252296","id":"20241015-180744_1613067495","dateCreated":"2024-10-15T18:07:44+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:1595","dateFinished":"2024-10-15T18:07:50+0000","dateStarted":"2024-10-15T18:07:49+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\nbookDF: org.apache.spark.sql.DataFrame = [id: string, text: string]\n\nwordsDF: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [word: string]\n\nwordCountDF: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [word: string, count: bigint]\n+----+-----+\n|word|count|\n+----+-----+\n| the| 4655|\n|  to| 4291|\n|  of| 3836|\n| and| 3713|\n| her| 2276|\n|   i| 2102|\n|   a| 2021|\n|  in| 1977|\n| was| 1874|\n| she| 1744|\n|that| 1623|\n|  it| 1574|\n| not| 1497|\n| you| 1362|\n|  he| 1356|\n| his| 1302|\n|  be| 1260|\n|  as| 1229|\n| had| 1185|\n|with| 1098|\n+----+-----+\nonly showing top 20 rows\n\n"}]}},{"text":"%sql\nSELECT * FROM word_counts WHERE length(word) > 3 ORDER BY count DESC LIMIT 20","dateUpdated":"2024-10-15T18:02:47+0000","config":{"editorSetting":{"language":"sql","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/sql","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1729015367568_-125664905","id":"paragraph_1683720000001_1234567891","dateCreated":"2024-10-15T18:02:47+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:1460"}],"name":"Gutenberg Word Count (Spark)","id":"2KA9DTCK2","angularObjects":{"2KCA5G25Q:shared_process":[],"2K9M3SKXU:shared_process":[],"2KD3MRPDX:shared_process":[],"2KAMKE5ZS:shared_process":[],"2KAP1S8NP:shared_process":[],"2KD6UQS35:shared_process":[],"2KB87KWWX:shared_process":[],"2KCY7CBF2:shared_process":[],"2KA7X2ZGV:shared_process":[],"2KBGS22RQ:shared_process":[],"2K9Y4A9CT:shared_process":[],"2KCNNRT6V:shared_process":[],"2KB5RY3YW:shared_process":[],"2K9DW1RP1:shared_process":[],"2K9NTFYRA:shared_process":[],"2KCEVT4H5:shared_process":[],"2KBXDHHFZ:shared_process":[],"2K9K6NQN7:shared_process":[],"2KAUSZWYD:shared_process":[]},"config":{"looknfeel":"default","personalizedMode":"false"},"info":{}}